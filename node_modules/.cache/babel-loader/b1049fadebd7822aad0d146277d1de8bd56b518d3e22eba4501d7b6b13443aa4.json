{"ast":null,"code":"var _jsxFileName = \"/home/javid/WebstormProjects/design-system/src/components/Dropdown/Dropdown.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport './Dropdown.scss';\nimport { Icon } from \"fresh-design-system\";\nimport cn from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Dropdown = props => {\n  _s();\n  const list = useRef(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const [selected, setSelected] = useState(1);\n  const handleSelect = key => {\n    setSelected(key);\n    props.onSelect(key);\n    setIsOpen(false);\n  };\n  const title = props.list.find(t => t.key === selected);\n  const wrapperClassNames = cn(\"drop-down-wrapper\", {\n    \"drop-down-wrapper-full-width\": props.fullWidth\n  });\n  const listClassNames = cn('drop-down-list-container', {\n    'drop-down-open-list': isOpen,\n    'drop-down-list-full-width': props.fullWidth\n  });\n  const iconClassNames = cn(\"drop-down-icon\", {\n    \"drop-down-open-icon\": isOpen\n  });\n  const closeOpenMenus = e => {\n    if (list.current && isOpen && !list.current.contains(e.target)) {\n      setIsOpen(false);\n    }\n  };\n  document.addEventListener('mousedown', closeOpenMenus);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: wrapperClassNames,\n    ref: list,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drop-down-header\",\n      onClick: () => setIsOpen(!isOpen),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: iconClassNames,\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          name: \"arrowDown\",\n          color: \"white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drop-down-title\",\n        children: title.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: listClassNames,\n      children: props.list.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drop-down-list-item\",\n        onClick: () => handleSelect(item.key),\n        children: item.title\n      }, item.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(Dropdown, \"1+19h7dodpYGzCVNMQ9uozZTWho=\");\n_c = Dropdown;\nDropdown.propTypes = {\n  fullWidth: PropTypes.bool,\n  onSelect: PropTypes.func,\n  list: PropTypes.array\n};\nDropdown.defaultProps = {\n  fullWidth: false,\n  onSelect: null,\n  list: []\n};\nvar _c;\n$RefreshReg$(_c, \"Dropdown\");\nDropdown.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Dropdown\",\n  \"props\": {\n    \"fullWidth\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"description\": \"\",\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false\n    },\n    \"onSelect\": {\n      \"defaultValue\": {\n        \"value\": \"null\",\n        \"computed\": false\n      },\n      \"description\": \"\",\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false\n    },\n    \"list\": {\n      \"defaultValue\": {\n        \"value\": \"[]\",\n        \"computed\": false\n      },\n      \"description\": \"\",\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false\n    }\n  }\n};\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/Dropdown/Dropdown.jsx\"] = {\n    name: \"Dropdown\",\n    docgenInfo: Dropdown.__docgenInfo,\n    path: \"src/components/Dropdown/Dropdown.jsx\"\n  };\n}","map":{"version":3,"names":["React","useRef","useState","Icon","cn","PropTypes","Dropdown","props","list","isOpen","setIsOpen","selected","setSelected","handleSelect","key","onSelect","title","find","t","wrapperClassNames","fullWidth","listClassNames","iconClassNames","closeOpenMenus","e","current","contains","target","document","addEventListener","map","item","propTypes","bool","func","array","defaultProps"],"sources":["/home/javid/WebstormProjects/design-system/src/components/Dropdown/Dropdown.jsx"],"sourcesContent":["import React, {useRef, useState} from 'react';\nimport './Dropdown.scss';\nimport {Icon} from \"fresh-design-system\";\nimport cn from \"classnames\";\nimport PropTypes from \"prop-types\";\n\nexport const Dropdown = props => {\n\n    const list = useRef(null)\n    const [isOpen, setIsOpen] = useState(false)\n    const [selected, setSelected] = useState(1)\n    const handleSelect = (key) => {\n        setSelected(key)\n        props.onSelect(key)\n        setIsOpen(false)\n    }\n    const title = props.list.find(t => t.key === selected)\n    const wrapperClassNames = cn(\n        \"drop-down-wrapper\",\n        {\n            \"drop-down-wrapper-full-width\": props.fullWidth\n        }\n    );\n    const listClassNames = cn(\n        'drop-down-list-container',\n        {\n            'drop-down-open-list': isOpen,\n            'drop-down-list-full-width': props.fullWidth\n        }\n    );\n    const iconClassNames = cn(\n        \"drop-down-icon\",\n        {\n            \"drop-down-open-icon\": isOpen\n        }\n    );\n    const closeOpenMenus = (e) => {\n        if (list.current && isOpen && !list.current.contains(e.target)) {\n            setIsOpen(false)\n        }\n    }\n    document.addEventListener('mousedown', closeOpenMenus)\n\n\n    return (\n        <div className={wrapperClassNames} ref={list}>\n            <div className=\"drop-down-header\" onClick={() => setIsOpen(!isOpen)}>\n                <div className={iconClassNames}>\n                    <Icon name=\"arrowDown\" color=\"white\"/>\n                </div>\n                <div className=\"drop-down-title\">\n                    {title.title}\n                </div>\n            </div>\n            <div className={listClassNames}>\n                {\n                    props.list.map((item) => (\n                        <div className=\"drop-down-list-item\" key={item.key} onClick={() => handleSelect(item.key)}>\n                            {item.title}\n                        </div>\n                    ))\n                }\n            </div>\n        </div>\n    );\n};\nDropdown.propTypes = {\n    fullWidth: PropTypes.bool,\n    onSelect: PropTypes.func,\n    list: PropTypes.array\n};\n\nDropdown.defaultProps = {\n    fullWidth: false,\n    onSelect: null,\n    list: []\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}